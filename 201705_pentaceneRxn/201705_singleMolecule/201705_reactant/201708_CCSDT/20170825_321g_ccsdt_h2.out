********************************************************************************
*                              PySCF CALCULATION                               *
********************************************************************************

================================== Input File ==================================

atoms
H    0.0000   0.0000    0.0000
H    0.0000   0.0000    0.7400
end
basis 3-21g

scf
 method ccsd(t)
 grid 4
 conv 1e-8
 grad 1e-8
 maxiter 100
 #shift 1.0
 damp 1.0
end
================================== End Input ===================================
#INFO: **** input file is /home/goodpast/graha682/code/python/pyscf_wrapper/run_pySCF.py ****
#!/usr/bin/env python

def main():
    '''Python wrapper to read a pySCF input file
    and run the corresponding calculations.'''

    from argparse import ArgumentParser, RawDescriptionHelpFormatter
    from textwrap import dedent
    from read_input import read_input, pstr
    import sys
    from simple_timer import timer
    from scf import do_scf
    from geomopt import do_geomopt
    from vfreq import vibrations

    # generate a parser to read the input files
    parser = ArgumentParser(description=dedent(main.__doc__),
                            formatter_class=RawDescriptionHelpFormatter)
    parser.add_argument('input_files', nargs='*', default=sys.stdin,
                        help='The pySCF input files.')
    args = parser.parse_args()

    # Cycle through all input files
    for files in args.input_files:

        # print header
        pstr ("", delim="*", addline=False)
        pstr ("PySCF CALCULATION", delim="*", fill=False, addline=False)
        pstr ("", delim="*", addline=False)

        # get input data
        inp = read_input(files)

        # start timer
        inp.timer = timer()

        # do single point energy
        inp = do_scf(inp)

        # do geomotry optimization
        if inp.geomopt: inp = do_geomopt(inp)

        if inp.vfreq: vibrations(inp)

        # end timer
        inp.timer.close()

        # print footer
        pstr("", delim="*")
        pstr("END OF CALCULATION", delim="*", fill=False, addline=False)
        pstr("", delim="*", addline=False)

if __name__=='__main__':
    main()
#INFO: ******************** input file end ********************


System: ('Linux', 'cn0080', '2.6.32-696.10.1.el6.x86_64', '#1 SMP Tue Aug 22 18:51:35 UTC 2017', 'x86_64', 'x86_64')  Threads 24
Python 2.7.6 | 64-bit | (default, Sep 15 2014, 17:36:10) 
[GCC 4.1.2 20080704 (Red Hat 4.1.2-54)]
numpy 1.10.4  scipy 0.17.0
Date: Thu Sep 14 11:33:22 2017
PySCF version 1.4a
PySCF path  /home/goodpast/graha682/code/python/pyscf/pyscf
GIT ORIG_HEAD 5844907ed185652a67f3c2f412250b44554b1b91
GIT HEAD      ref: refs/heads/master
GIT master branch  5a6e4032c6cb310076977bf244a460aa6dd0f9f2

[INPUT] VERBOSE 4
[INPUT] num atoms = 2
[INPUT] num electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT]  1 H      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   0.740000000000 AA    0.000000000000   0.000000000000   1.398397332178 Bohr
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] H
[INPUT] 0    0    [2    /1   ]  5.447178          0.156285
                                0.824547          0.904691
[INPUT] 0    0    [1    /1   ]  0.183192             1
nuclear repulsion = 0.715104339081081
number of shells = 4
number of NR pGTOs = 6
number of NR cGTOs = 4
basis = {'H': [[0, [5.447178, 0.156285], [0.824547, 0.904691]], [0, [0.183192, 1.0]]]}
ecp = {}
CPU time:         0.66


******** <class 'pyscf.scf.hf.RHF'> flags ********
method = RHF
initial guess = atom
damping factor = 0
level shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
DIIS start cycle = 1
DIIS space = 8
SCF tol = 1e-08
SCF gradient tol = 1e-08
max. SCF cycles = 100
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /panfs/roc/scratch/graha682/201708_CCSDT/20170825_321g_ccsdt_h2/tmpCMLvhU
max_memory 4000 MB (current use 46 MB)
Initial guess from superpostion of atomic densties.
init E= -0.849609008830453
  HOMO = -0.599360048994934  LUMO = 0.183551595838491
cycle= 1 E= -1.12141605808376  delta_E= -0.272  |g|= 0.0629  |ddm|= 0.794
  HOMO = -0.600526079371131  LUMO = 0.257943683351818
cycle= 2 E= -1.12290895989886  delta_E= -0.00149  |g|= 0.009  |ddm|= 0.0514
  HOMO = -0.592669984067792  LUMO = 0.264189249980091
cycle= 3 E= -1.12294025682879  delta_E= -3.13e-05  |g|= 7.07e-06  |ddm|= 0.0086
  HOMO = -0.592651514829227  LUMO = 0.264188195978675
cycle= 4 E= -1.12294025684469  delta_E= -1.59e-11  |g|= 2.96e-06  |ddm|= 3.93e-06
  HOMO = -0.592646622536248  LUMO = 0.26418791678977
cycle= 5 E= -1.12294025684672  delta_E= -2.03e-12  |g|= 1.87e-06  |ddm|= 1.04e-06
  HOMO = -0.592644359934831  LUMO = 0.26418778767052
cycle= 6 E= -1.12294025684735  delta_E= -6.29e-13  |g|= 1.37e-06  |ddm|= 4.81e-07
  HOMO = -0.592643055841028  LUMO = 0.264187713250461
cycle= 7 E= -1.12294025684763  delta_E= -2.75e-13  |g|= 1.08e-06  |ddm|= 2.77e-07
  HOMO = -0.592642207611554  LUMO = 0.264187664845125
cycle= 8 E= -1.12294025684777  delta_E= -1.44e-13  |g|= 8.91e-07  |ddm|= 1.8e-07
  HOMO = -0.592641611765621  LUMO = 0.26418763084247
cycle= 9 E= -1.12294025684785  delta_E= -8.35e-14  |g|= 7.58e-07  |ddm|= 1.27e-07
  HOMO = -0.592638202179299  LUMO = 0.264187436266278
cycle= 10 E= -1.12294025684808  delta_E= -2.22e-13  |g|= 2.67e-10  |ddm|= 7.25e-07
  HOMO = -0.592638201047641  LUMO = 0.26418743618007
Extra cycle  E= -1.12294025684808  delta_E= -2.22e-16  |g|= 2.67e-10  |ddm|= 2.18e-10
converged SCF energy = -1.12294025684808

******** <class 'pyscf.cc.rccsd.RCCSD'> flags ********
CCSD nocc = 1, nvir = 3
max_cycle = 100
direct = 0
conv_tol = 1e-07
conv_tol_normt = 1e-05
diis_space = 6
diis_start_cycle = 0
diis_start_energy_diff = 1e+09
max_memory 4000 MB (current use 54 MB)
Init t2, MP2 energy = -0.0173130553978467
istep = 0  E(CCSD) = -0.0223798636652301  dE = -0.0223798637  norm(t1,t2) = 0.0296778
istep = 1  E(CCSD) = -0.0239961178638552  dE = -0.0016162542  norm(t1,t2) = 0.0111097
istep = 2  E(CCSD) = -0.0245512316882937  dE = -0.000555113824  norm(t1,t2) = 0.00423697
istep = 3  E(CCSD) = -0.0248785437216228  dE = -0.000327312033  norm(t1,t2) = 0.00163707
istep = 4  E(CCSD) = -0.0248729246586216  dE = 5.619063e-06  norm(t1,t2) = 5.12709e-05
istep = 5  E(CCSD) = -0.0248728927245739  dE = 3.19340477e-08  norm(t1,t2) = 1.91566e-06
CCSD converged
E(CCSD) = -1.147813149572649  E_corr = -0.02487289272457387
CCSD(T) correction = -8.63556709129728e-20
Total CCSD(T) =   -1.147813149572649
================================================================================
TIMING STATISTICS:
                    hf      0.09s   (41.46%)
                  ccsd      0.10s   (47.75%)
               ccsd(t)      0.02s   (10.77%)
                 TOTAL      0.21s
================================================================================

********************************************************************************
*                              END OF CALCULATION                              *
********************************************************************************
