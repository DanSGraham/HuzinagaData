********************************************************************************
*                              PySCF CALCULATION                               *
********************************************************************************

================================== Input File ==================================

atoms
H    0.0000   0.0000    0.0000
H    0.0000   0.0000    0.7400
end
basis cc-pVTZ

scf
 method ccsd(t)
 grid 4
 conv 1e-8
 grad 1e-8
 maxiter 100
 #shift 1.0
 damp 1.0
end
================================== End Input ===================================
#INFO: **** input file is /home/goodpast/graha682/code/python/pyscf_wrapper/run_pySCF.py ****
#!/usr/bin/env python

def main():
    '''Python wrapper to read a pySCF input file
    and run the corresponding calculations.'''

    from argparse import ArgumentParser, RawDescriptionHelpFormatter
    from textwrap import dedent
    from read_input import read_input, pstr
    import sys
    from simple_timer import timer
    from scf import do_scf
    from geomopt import do_geomopt
    from vfreq import vibrations

    # generate a parser to read the input files
    parser = ArgumentParser(description=dedent(main.__doc__),
                            formatter_class=RawDescriptionHelpFormatter)
    parser.add_argument('input_files', nargs='*', default=sys.stdin,
                        help='The pySCF input files.')
    args = parser.parse_args()

    # Cycle through all input files
    for files in args.input_files:

        # print header
        pstr ("", delim="*", addline=False)
        pstr ("PySCF CALCULATION", delim="*", fill=False, addline=False)
        pstr ("", delim="*", addline=False)

        # get input data
        inp = read_input(files)

        # start timer
        inp.timer = timer()

        # do single point energy
        inp = do_scf(inp)

        # do geomotry optimization
        if inp.geomopt: inp = do_geomopt(inp)

        if inp.vfreq: vibrations(inp)

        # end timer
        inp.timer.close()

        # print footer
        pstr("", delim="*")
        pstr("END OF CALCULATION", delim="*", fill=False, addline=False)
        pstr("", delim="*", addline=False)

if __name__=='__main__':
    main()
#INFO: ******************** input file end ********************


System: ('Linux', 'cn0647', '2.6.32-696.10.1.el6.x86_64', '#1 SMP Tue Aug 22 18:51:35 UTC 2017', 'x86_64', 'x86_64')  Threads 24
Python 2.7.6 | 64-bit | (default, Sep 15 2014, 17:36:10) 
[GCC 4.1.2 20080704 (Red Hat 4.1.2-54)]
numpy 1.10.4  scipy 0.17.0
Date: Thu Sep 14 11:33:24 2017
PySCF version 1.4a
PySCF path  /home/goodpast/graha682/code/python/pyscf/pyscf
GIT ORIG_HEAD 5844907ed185652a67f3c2f412250b44554b1b91
GIT HEAD      ref: refs/heads/master
GIT master branch  5a6e4032c6cb310076977bf244a460aa6dd0f9f2

[INPUT] VERBOSE 4
[INPUT] num atoms = 2
[INPUT] num electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT]  1 H      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   0.740000000000 AA    0.000000000000   0.000000000000   1.398397332178 Bohr
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] H
[INPUT] 0    0    [3    /1   ]  33.87             0.006068
                                5.095             0.045308
                                1.159             0.202822
[INPUT] 0    0    [1    /1   ]  0.3258               1
[INPUT] 0    0    [1    /1   ]  0.1027               1
[INPUT] 1    0    [1    /1   ]  1.407                1
[INPUT] 1    0    [1    /1   ]  0.388                1
[INPUT] 2    0    [1    /1   ]  1.057                1
nuclear repulsion = 0.715104339081081
number of shells = 12
number of NR pGTOs = 32
number of NR cGTOs = 28
basis = {'H': [[0, [33.87, 0.006068], [5.095, 0.045308], [1.159, 0.202822]], [0, [0.3258, 1.0]], [0, [0.1027, 1.0]], [1, [1.407, 1.0]], [1, [0.388, 1.0]], [2, [1.057, 1.0]]]}
ecp = {}
CPU time:         0.70


******** <class 'pyscf.scf.hf.RHF'> flags ********
method = RHF
initial guess = atom
damping factor = 0
level shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
DIIS start cycle = 1
DIIS space = 8
SCF tol = 1e-08
SCF gradient tol = 1e-08
max. SCF cycles = 100
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /panfs/roc/scratch/graha682/201708_CCSDT/20170825_ccpVTZ_ccsdt_h2/tmp8UVD6w
max_memory 4000 MB (current use 46 MB)
Initial guess from superpostion of atomic densties.
init E= -0.842247648760229
  HOMO = -0.634198402150105  LUMO = 0.0979369315716715
cycle= 1 E= -1.13004716892227  delta_E= -0.288  |g|= 0.067  |ddm|= 0.61
  HOMO = -0.607659739238886  LUMO = 0.160508655271457
cycle= 2 E= -1.13284433156883  delta_E= -0.0028  |g|= 0.0136  |ddm|= 0.0731
  HOMO = -0.595291140932415  LUMO = 0.166893999765244
cycle= 3 E= -1.13296661733873  delta_E= -0.000122  |g|= 0.00142  |ddm|= 0.0207
  HOMO = -0.594691863991437  LUMO = 0.16724795682992
cycle= 4 E= -1.13296768194901  delta_E= -1.06e-06  |g|= 4.99e-05  |ddm|= 0.00242
  HOMO = -0.594690256114677  LUMO = 0.167258463827422
cycle= 5 E= -1.13296768291781  delta_E= -9.69e-10  |g|= 3.89e-06  |ddm|= 6.86e-05
  HOMO = -0.59468900313382  LUMO = 0.16725726628043
cycle= 6 E= -1.13296768292209  delta_E= -4.28e-12  |g|= 2.65e-07  |ddm|= 2.45e-06
  HOMO = -0.59468915898755  LUMO = 0.167257317452168
cycle= 7 E= -1.13296768292213  delta_E= -4.17e-14  |g|= 1.65e-09  |ddm|= 3.48e-07
  HOMO = -0.594689159232007  LUMO = 0.167257318002254
Extra cycle  E= -1.13296768292214  delta_E= -1.11e-15  |g|= 1.65e-09  |ddm|= 1.58e-09
converged SCF energy = -1.13296768292214

******** <class 'pyscf.cc.rccsd.RCCSD'> flags ********
CCSD nocc = 1, nvir = 27
max_cycle = 100
direct = 0
conv_tol = 1e-07
conv_tol_normt = 1e-05
diis_space = 6
diis_start_cycle = 0
diis_start_energy_diff = 1e+09
max_memory 4000 MB (current use 86 MB)
Init t2, MP2 energy = -0.0316759243512489
istep = 0  E(CCSD) = -0.0369733665824973  dE = -0.0369733666  norm(t1,t2) = 0.0297021
istep = 1  E(CCSD) = -0.0385529222363932  dE = -0.00157955565  norm(t1,t2) = 0.0102636
istep = 2  E(CCSD) = -0.0390717155101259  dE = -0.000518793274  norm(t1,t2) = 0.00397598
istep = 3  E(CCSD) = -0.0393729784781743  dE = -0.000301262968  norm(t1,t2) = 0.00162838
istep = 4  E(CCSD) = -0.0393641594597797  dE = 8.81901839e-06  norm(t1,t2) = 0.000126615
istep = 5  E(CCSD) = -0.0393644246064494  dE = -2.6514667e-07  norm(t1,t2) = 7.2612e-06
istep = 6  E(CCSD) = -0.0393644167814136  dE = 7.82503572e-09  norm(t1,t2) = 9.53131e-07
CCSD converged
E(CCSD) = -1.172332099703549  E_corr = -0.03936441678141363
CCSD(T) correction = 3.73129298631057e-20
Total CCSD(T) =   -1.172332099703549
================================================================================
TIMING STATISTICS:
                    hf      0.11s   (28.94%)
                  ccsd      0.17s   (42.66%)
               ccsd(t)      0.11s   (28.38%)
                 TOTAL      0.40s
================================================================================

********************************************************************************
*                              END OF CALCULATION                              *
********************************************************************************
