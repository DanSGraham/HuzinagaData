********************************************************************************
*                              PySCF CALCULATION                               *
********************************************************************************

================================== Input File ==================================

atoms
H    0.0000   0.0000    0.0000
H    0.0000   0.0000    0.7400
end
basis cc-pVDZ

scf
 method ccsd(t)
 grid 4
 conv 1e-8
 grad 1e-8
 maxiter 100
 #shift 1.0
 damp 1.0
end
================================== End Input ===================================
#INFO: **** input file is /home/goodpast/graha682/code/python/pyscf_wrapper/run_pySCF.py ****
#!/usr/bin/env python

def main():
    '''Python wrapper to read a pySCF input file
    and run the corresponding calculations.'''

    from argparse import ArgumentParser, RawDescriptionHelpFormatter
    from textwrap import dedent
    from read_input import read_input, pstr
    import sys
    from simple_timer import timer
    from scf import do_scf
    from geomopt import do_geomopt
    from vfreq import vibrations

    # generate a parser to read the input files
    parser = ArgumentParser(description=dedent(main.__doc__),
                            formatter_class=RawDescriptionHelpFormatter)
    parser.add_argument('input_files', nargs='*', default=sys.stdin,
                        help='The pySCF input files.')
    args = parser.parse_args()

    # Cycle through all input files
    for files in args.input_files:

        # print header
        pstr ("", delim="*", addline=False)
        pstr ("PySCF CALCULATION", delim="*", fill=False, addline=False)
        pstr ("", delim="*", addline=False)

        # get input data
        inp = read_input(files)

        # start timer
        inp.timer = timer()

        # do single point energy
        inp = do_scf(inp)

        # do geomotry optimization
        if inp.geomopt: inp = do_geomopt(inp)

        if inp.vfreq: vibrations(inp)

        # end timer
        inp.timer.close()

        # print footer
        pstr("", delim="*")
        pstr("END OF CALCULATION", delim="*", fill=False, addline=False)
        pstr("", delim="*", addline=False)

if __name__=='__main__':
    main()
#INFO: ******************** input file end ********************


System: ('Linux', 'cn0587', '2.6.32-696.10.1.el6.x86_64', '#1 SMP Tue Aug 22 18:51:35 UTC 2017', 'x86_64', 'x86_64')  Threads 24
Python 2.7.6 | 64-bit | (default, Sep 15 2014, 17:36:10) 
[GCC 4.1.2 20080704 (Red Hat 4.1.2-54)]
numpy 1.10.4  scipy 0.17.0
Date: Thu Sep 14 11:33:24 2017
PySCF version 1.4a
PySCF path  /home/goodpast/graha682/code/python/pyscf/pyscf
GIT ORIG_HEAD 5844907ed185652a67f3c2f412250b44554b1b91
GIT HEAD      ref: refs/heads/master
GIT master branch  5a6e4032c6cb310076977bf244a460aa6dd0f9f2

[INPUT] VERBOSE 4
[INPUT] num atoms = 2
[INPUT] num electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT]  1 H      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   0.740000000000 AA    0.000000000000   0.000000000000   1.398397332178 Bohr
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] H
[INPUT] 0    0    [3    /1   ]  13.01             0.019685
                                1.962             0.137977
                                0.4446            0.478148
[INPUT] 0    0    [1    /1   ]  0.122                1
[INPUT] 1    0    [1    /1   ]  0.727                1
nuclear repulsion = 0.715104339081081
number of shells = 6
number of NR pGTOs = 14
number of NR cGTOs = 10
basis = {'H': [[0, [13.01, 0.019685], [1.962, 0.137977], [0.4446, 0.478148]], [0, [0.122, 1.0]], [1, [0.727, 1.0]]]}
ecp = {}
CPU time:         0.76


******** <class 'pyscf.scf.hf.RHF'> flags ********
method = RHF
initial guess = atom
damping factor = 0
level shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
DIIS start cycle = 1
DIIS space = 8
SCF tol = 1e-08
SCF gradient tol = 1e-08
max. SCF cycles = 100
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /panfs/roc/scratch/graha682/201708_CCSDT/20170825_ccpVDZ_ccsdt_h2/tmpn7GjR4
max_memory 4000 MB (current use 46 MB)
Initial guess from superpostion of atomic densties.
init E= -0.849745892608986
  HOMO = -0.623743481673556  LUMO = 0.119922159536479
cycle= 1 E= -1.12603459711967  delta_E= -0.276  |g|= 0.0688  |ddm|= 0.763
  HOMO = -0.604526124972582  LUMO = 0.190039615004469
cycle= 2 E= -1.12861286167631  delta_E= -0.00258  |g|= 0.0124  |ddm|= 0.0817
  HOMO = -0.592776927372766  LUMO = 0.197238213596766
cycle= 3 E= -1.12869988939425  delta_E= -8.7e-05  |g|= 0.000718  |ddm|= 0.0185
  HOMO = -0.592399857304922  LUMO = 0.197437438299182
cycle= 4 E= -1.12870009350116  delta_E= -2.04e-07  |g|= 9.91e-06  |ddm|= 0.000964
  HOMO = -0.592410963690617  LUMO = 0.197440050019183
cycle= 5 E= -1.12870009355644  delta_E= -5.53e-11  |g|= 2.14e-08  |ddm|= 1.46e-05
  HOMO = -0.592410974995386  LUMO = 0.197440052831768
cycle= 6 E= -1.12870009355644  delta_E= -6.66e-16  |g|= 1.07e-08  |ddm|= 1.6e-08
  HOMO = -0.592410978763302  LUMO = 0.197440053769014
cycle= 7 E= -1.12870009355644  delta_E= 2.22e-16  |g|= 7.08e-09  |ddm|= 5.32e-09
  HOMO = -0.592410984936769  LUMO = 0.197440056367087
Extra cycle  E= -1.12870009355644  delta_E= -4.44e-16  |g|= 7.08e-09  |ddm|= 8.51e-09
converged SCF energy = -1.12870009355644

******** <class 'pyscf.cc.rccsd.RCCSD'> flags ********
CCSD nocc = 1, nvir = 9
max_cycle = 100
direct = 0
conv_tol = 1e-07
conv_tol_normt = 1e-05
diis_space = 6
diis_start_cycle = 0
diis_start_energy_diff = 1e+09
max_memory 4000 MB (current use 81 MB)
Init t2, MP2 energy = -0.0263715576381415
istep = 0  E(CCSD) = -0.0322865251100712  dE = -0.0322865251  norm(t1,t2) = 0.0292693
istep = 1  E(CCSD) = -0.0338913779662957  dE = -0.00160485286  norm(t1,t2) = 0.0102708
istep = 2  E(CCSD) = -0.0343953792779606  dE = -0.000504001312  norm(t1,t2) = 0.00395373
istep = 3  E(CCSD) = -0.0346827087697269  dE = -0.000287329492  norm(t1,t2) = 0.00159933
istep = 4  E(CCSD) = -0.0346743540095205  dE = 8.35476021e-06  norm(t1,t2) = 0.0001
istep = 5  E(CCSD) = -0.0346743952012686  dE = -4.11917481e-08  norm(t1,t2) = 4.942e-06
CCSD converged
E(CCSD) = -1.16337448875771  E_corr = -0.0346743952012686
CCSD(T) correction = 6.40354076901151e-20
Total CCSD(T) =   -1.163374488757710
================================================================================
TIMING STATISTICS:
                    hf      0.12s   (34.50%)
                  ccsd      0.17s   (47.85%)
               ccsd(t)      0.06s   (17.63%)
                 TOTAL      0.36s
================================================================================

********************************************************************************
*                              END OF CALCULATION                              *
********************************************************************************
