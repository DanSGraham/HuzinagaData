********************************************************************************
*                              PySCF CALCULATION                               *
********************************************************************************

================================== Input File ==================================
atoms
F    0.0    0.0    0.0
end
charge -1
basis aug-cc-pVDZ

scf
 method ccsd(t)
 grid 4
 conv 1e-8
 grad 1e-8
 maxiter 100
 #shift 1.0
 #damp 1.0
end

================================== End Input ===================================
#INFO: **** input file is /home/goodpast/shared/repositories/pyscf_wrapper/run_pySCF.py ****
#!/usr/bin/env python

def main():
    '''Python wrapper to read a pySCF input file
    and run the corresponding calculations.'''

    from argparse import ArgumentParser, RawDescriptionHelpFormatter
    from textwrap import dedent
    from read_input import read_input, pstr
    import sys
    from simple_timer import timer
    from scf import do_scf
    from geomopt import do_geomopt
    from vfreq import vibrations

    # generate a parser to read the input files
    parser = ArgumentParser(description=dedent(main.__doc__),
                            formatter_class=RawDescriptionHelpFormatter)
    parser.add_argument('input_files', nargs='*', default=sys.stdin,
                        help='The pySCF input files.')
    args = parser.parse_args()

    # Cycle through all input files
    for files in args.input_files:

        # print header
        pstr ("", delim="*", addline=False)
        pstr ("PySCF CALCULATION", delim="*", fill=False, addline=False)
        pstr ("", delim="*", addline=False)

        # get input data
        inp = read_input(files)

        # start timer
        inp.timer = timer()

        # do single point energy
        inp = do_scf(inp)

        # do geomotry optimization
        if inp.geomopt: inp = do_geomopt(inp)

        if inp.vfreq: vibrations(inp)

        # end timer
        inp.timer.close()

        # print footer
        pstr("", delim="*")
        pstr("END OF CALCULATION", delim="*", fill=False, addline=False)
        pstr("", delim="*", addline=False)

if __name__=='__main__':
    main()
#INFO: ******************** input file end ********************


System: ('Linux', 'cn0088', '2.6.32-696.10.1.el6.x86_64', '#1 SMP Tue Aug 22 18:51:35 UTC 2017', 'x86_64', 'x86_64')  Threads 24
Python 2.7.6 | 64-bit | (default, Sep 15 2014, 17:36:10) 
[GCC 4.1.2 20080704 (Red Hat 4.1.2-54)]
numpy 1.10.4  scipy 0.17.0
Date: Fri Sep  8 15:23:01 2017
PySCF version 1.4a
PySCF path  /home/goodpast/graha682/code/python/pyscf/pyscf
GIT ORIG_HEAD 5844907ed185652a67f3c2f412250b44554b1b91
GIT HEAD      ref: refs/heads/master
GIT master branch  5a6e4032c6cb310076977bf244a460aa6dd0f9f2

[INPUT] VERBOSE 4
[INPUT] num atoms = 1
[INPUT] num electrons = 10
[INPUT] charge = -1
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT]  1 F      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] F
[INPUT] 0    0    [8    /2   ]  14710             0.000721 -0.000165
                                2207              0.005553 -0.001308
                                502.8             0.028267 -0.006495
                                142.6             0.106444 -0.026691
                                46.47             0.286814 -0.07369
                                16.7              0.448641 -0.170776
                                6.356             0.264761 -0.112327
                                1.316             0.015333 0.562814
[INPUT] 0    0    [1    /1   ]  0.3897               1
[INPUT] 0    0    [1    /1   ]  0.09863              1
[INPUT] 1    0    [3    /1   ]  22.67             0.044878
                                4.977             0.235718
                                1.347             0.508521
[INPUT] 1    0    [1    /1   ]  0.3471               1
[INPUT] 1    0    [1    /1   ]  0.08502              1
[INPUT] 2    0    [1    /1   ]  1.64                 1
[INPUT] 2    0    [1    /1   ]  0.464                1
nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 35
number of NR cGTOs = 23
basis = {'F': [[0, [14710.0, 0.000721, -0.000165], [2207.0, 0.005553, -0.001308], [502.8, 0.028267, -0.006495], [142.6, 0.106444, -0.026691], [46.47, 0.286814, -0.07369], [16.7, 0.448641, -0.170776], [6.356, 0.264761, -0.112327], [1.316, 0.015333, 0.562814]], [0, [0.3897, 1.0]], [0, [0.09863, 1.0]], [1, [22.67, 0.044878], [4.977, 0.235718], [1.347, 0.508521]], [1, [0.3471, 1.0]], [1, [0.08502, 1.0]], [2, [1.64, 1.0]], [2, [0.464, 1.0]]]}
ecp = {}
CPU time:         0.61
None


******** <class 'pyscf.scf.hf.RHF'> flags ********
method = RHF
initial guess = atom
damping factor = 0
level shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
DIIS start cycle = 1
DIIS space = 8
SCF tol = 1e-08
SCF gradient tol = 1e-08
max. SCF cycles = 100
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /panfs/roc/scratch/graha682/20170815_augccpVDZ_ccsdt_flouride/tmpYmz_pg
max_memory 4000 MB (current use 45 MB)
Initial guess from superpostion of atomic densties.
init E= -99.0351113953683
  HOMO = -0.624046163905621  LUMO = 0.22833902504323
cycle= 1 E= -99.3216565361663  delta_E= -0.287  |g|= 0.734  |ddm|= 0.384
  HOMO = 0.0248501788837889  LUMO = 0.534129429911103
cycle= 2 E= -99.3594606388518  delta_E= -0.0378  |g|= 0.662  |ddm|= 0.77
  HOMO = -0.1690493205982  LUMO = 0.508323568965618
cycle= 3 E= -99.4282158223069  delta_E= -0.0688  |g|= 0.0149  |ddm|= 0.312
  HOMO = -0.178666733573021  LUMO = 0.509415758260098
cycle= 4 E= -99.4282788505581  delta_E= -6.3e-05  |g|= 0.00349  |ddm|= 0.0173
  HOMO = -0.181014050034392  LUMO = 0.508974708357564
cycle= 5 E= -99.4282824223981  delta_E= -3.57e-06  |g|= 0.000268  |ddm|= 0.00482
  HOMO = -0.181191306581905  LUMO = 0.508974153306347
cycle= 6 E= -99.4282824414767  delta_E= -1.91e-08  |g|= 3.78e-05  |ddm|= 0.00033
  HOMO = -0.181215678280682  LUMO = 0.50897346488655
cycle= 7 E= -99.4282824418026  delta_E= -3.26e-10  |g|= 5.3e-07  |ddm|= 4.48e-05
  HOMO = -0.181215437296397  LUMO = 0.508973481266495
cycle= 8 E= -99.4282824418026  delta_E= 2.84e-14  |g|= 3.61e-09  |ddm|= 5.93e-07
  HOMO = -0.181215436442656  LUMO = 0.508973480510631
Extra cycle  E= -99.4282824418026  delta_E= -1.42e-14  |g|= 3.61e-09  |ddm|= 6.75e-09
converged SCF energy = -99.4282824418026

******** <class 'pyscf.cc.rccsd.RCCSD'> flags ********
CCSD nocc = 5, nvir = 18
max_cycle = 100
direct = 0
conv_tol = 1e-07
conv_tol_normt = 1e-05
diis_space = 6
diis_start_cycle = 0
diis_start_energy_diff = 1e+09
max_memory 4000 MB (current use 85 MB)
Init t2, MP2 energy = -0.239829810955941
istep = 0  E(CCSD) = -0.228116755256816  dE = -0.228116755  norm(t1,t2) = 0.0935935
istep = 1  E(CCSD) = -0.237274279189149  dE = -0.00915752393  norm(t1,t2) = 0.041248
istep = 2  E(CCSD) = -0.234662468016093  dE = 0.00261181117  norm(t1,t2) = 0.024788
istep = 3  E(CCSD) = -0.236149106020721  dE = -0.001486638  norm(t1,t2) = 0.01185
istep = 4  E(CCSD) = -0.236359481021951  dE = -0.000210375001  norm(t1,t2) = 0.00286301
istep = 5  E(CCSD) = -0.236344275260634  dE = 1.52057613e-05  norm(t1,t2) = 0.0001
istep = 6  E(CCSD) = -0.2363401758105  dE = 4.09945013e-06  norm(t1,t2) = 3.42154e-05
istep = 7  E(CCSD) = -0.236340360299001  dE = -1.84488501e-07  norm(t1,t2) = 1.19454e-05
istep = 8  E(CCSD) = -0.236340212598948  dE = 1.47700053e-07  norm(t1,t2) = 2.19742e-06
istep = 9  E(CCSD) = -0.236340229205956  dE = -1.66070081e-08  norm(t1,t2) = 2.48303e-07
CCSD converged
E(CCSD) = -99.66462267100856  E_corr = -0.2363402292059565
CCSD(T) correction = -0.00595993640216033
Total CCSD(T) =  -99.670582607410722
================================================================================
TIMING STATISTICS:
                    hf      0.09s   (14.79%)
                  ccsd      0.42s   (71.99%)
               ccsd(t)      0.08s   (13.20%)
                 TOTAL      0.59s
================================================================================

********************************************************************************
*                              END OF CALCULATION                              *
********************************************************************************
